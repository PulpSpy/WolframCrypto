(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    104204,       2209]
NotebookOptionsPosition[     53878,       1298]
NotebookOutlinePosition[    100200,       2152]
CellTagsIndexPosition[    100157,       2149]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Markdown Export", "Section",
 CellChangeTimes->{{3.952967344376083*^9, 
  3.952967350748616*^9}},ExpressionUUID->"07d10a75-2318-4e42-9150-\
16fc0a87e36f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MarkdownTableToNotebookDir", "[", 
    RowBox[{"data_List", ",", 
     RowBox[{"header_List", ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"filename_String", ":", "\"\<table.md\>\""}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "h", ",", "divider", ",", "tableRows", ",", "markdown", ",", "path"}], 
      "}"}], ",", 
     RowBox[{
      RowBox[{"h", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"header", "===", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"\"\<\>\"", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"data", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ",", "header"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"divider", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"\"\<---\>\"", ",", 
         RowBox[{"Length", "[", "h", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tableRows", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\"\<| \>\"", "<>", 
           RowBox[{"StringRiffle", "[", 
            RowBox[{
             RowBox[{"ToString", "/@", "#"}], ",", "\"\< | \>\""}], "]"}], 
           "<>", "\"\< |\>\""}], "&"}], ",", "data"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"markdown", "=", 
       RowBox[{"StringRiffle", "[", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<| \>\"", "<>", 
              RowBox[{"StringRiffle", "[", 
               RowBox[{"h", ",", "\"\< | \>\""}], "]"}], "<>", "\"\< |\>\""}],
              ",", 
             RowBox[{"\"\<| \>\"", "<>", 
              RowBox[{"StringRiffle", "[", 
               RowBox[{"divider", ",", "\"\< | \>\""}], "]"}], "<>", 
              "\"\< |\>\""}]}], "}"}], ",", "tableRows"}], "]"}], ",", 
         "\"\<\\n\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"path", "=", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NotebookDirectory", "[", "]"}], ",", "filename"}], "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "markdown"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<table.md\>\""}], 
      ",", 
      RowBox[{"MarkdownTableToNotebookDir", "[", "table", "]"}], ",", 
      "\"\<Text\>\""}], "]"}], ";"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.9528857897757483`*^9, 3.952885806118948*^9}, 
   3.9529428467748623`*^9, 3.952942992331846*^9, {3.952943055386689*^9, 
   3.952943055934146*^9}, {3.9529438785791883`*^9, 3.952943921362947*^9}, {
   3.9529558142139683`*^9, 3.952955875293974*^9}, {3.952967300127521*^9, 
   3.952967306286475*^9}, {3.953281333196438*^9, 3.953281336304407*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"65df7fc0-05d3-4640-9337-5ce35f540d26"]
}, Open  ]],

Cell[CellGroupData[{

Cell["FRI", "Section",
 CellChangeTimes->{{3.953723213483982*^9, 
  3.9537232153771048`*^9}},ExpressionUUID->"a4bd33d3-feaf-4214-b0c0-\
00e11905c3e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"--", 
      RowBox[{"-", "Front"}]}], " ", 
     RowBox[{"Matter", "--"}]}], "-"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"On", "[", "Assert", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"Attributes", "[", "X", "]"}], ",", "Protected"}], "]"}], ",", 
      RowBox[{"Unprotect", "[", "X", "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Clear", "[", "X", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Protect", "[", "X", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"-", "Helper"}]}], " ", 
      RowBox[{"Functions", "--"}]}], "-"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MonomialTable", "[", 
      RowBox[{"poly_", ",", "\[Omega]_", ",", "k_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"poly2", ",", "table"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"poly2", "=", 
         RowBox[{"PadRight", "[", 
          RowBox[{"poly", ",", "k", ",", "0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"table", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"poly2", "[", 
             RowBox[{"[", 
              RowBox[{"j", "+", "1"}], "]"}], "]"}], "*", 
            RowBox[{"PowerMod", "[", 
             RowBox[{"\[Omega]", ",", 
              RowBox[{"i", "*", "j"}], ",", "q"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", 
             RowBox[{"k", "-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", 
             RowBox[{"k", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"Expand", "[", 
          RowBox[{
           RowBox[{"FromDigits", "[", 
            RowBox[{
             RowBox[{"Reverse", "[", "poly", "]"}], ",", "X"}], "]"}], ",", 
           RowBox[{"Modulus", "->", "q"}]}], "]"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"TableForm", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"table", ",", "q"}], "]"}], "]"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "\"\<\\n\>\"", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ModDiv", "[", 
      RowBox[{"a_", ",", "b_", ",", "q_"}], "]"}], ":=", 
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{"a", "*", 
        RowBox[{"PowerMod", "[", 
         RowBox[{"b", ",", 
          RowBox[{"-", "1"}], ",", "q"}], "]"}]}], ",", "q"}], "]"}]}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ModHalve", "[", 
      RowBox[{"a_", ",", "q_"}], "]"}], ":=", 
     RowBox[{"ModDiv", "[", 
      RowBox[{"a", ",", "2", ",", "q"}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"-", "Global"}]}], " ", 
      RowBox[{"Variables", "--"}]}], "-"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"q", "=", "786433"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"k0", "=", "32"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]0", "=", 
     RowBox[{"PowerMod", "[", 
      RowBox[{
       RowBox[{"PrimitiveRoot", "[", "q", "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"q", "-", "1"}], ")"}], "/", "k0"}], ",", "q"}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"d0", "=", "8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"poly0", "=", 
     RowBox[{"RandomInteger", "[", 
      RowBox[{"q", ",", 
       RowBox[{"d0", "+", "1"}]}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"domain0", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"PowerMod", "[", 
        RowBox[{"\[Omega]0", ",", "i", ",", "q"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{"k0", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"MultiplicativeOrder", "[", 
       RowBox[{"\[Omega]0", ",", "q"}], "]"}], "==", "k0"}], "]"}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"domain0", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "==", "\[Omega]0"}], "]"}], ";"}], 
   "  ", 
   RowBox[{"(*", 
    RowBox[{"Check", " ", "that", " ", 
     RowBox[{"domain0", "[", 
      RowBox[{"[", "2", "]"}], "]"}], " ", "equals", " ", "\[Omega]0"}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"-", "Round"}]}], " ", 
      RowBox[{"1", "--"}]}], "-"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]1", "=", 
     RowBox[{"RandomInteger", "[", "q", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k1", "=", 
     RowBox[{"k0", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]1", "=", 
     RowBox[{"PowerMod", "[", 
      RowBox[{"\[Omega]0", ",", "2", ",", "q"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"poly1", "=", 
    RowBox[{"Apply", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"#1", "+", 
          RowBox[{"#2", "*", "\[Beta]1"}]}], ",", "q"}], "]"}], "&"}], ",", 
      RowBox[{"Partition", "[", 
       RowBox[{"poly0", ",", "2", ",", "2", ",", "1", ",", "0"}], "]"}], ",", 
      "1"}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"-", "Round"}]}], " ", 
      RowBox[{"2", "--"}]}], "-"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]2", "=", 
     RowBox[{"RandomInteger", "[", "q", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k2", "=", 
     RowBox[{"k1", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]2", "=", 
     RowBox[{"PowerMod", "[", 
      RowBox[{"\[Omega]1", ",", "2", ",", "q"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"poly2", "=", 
    RowBox[{"Apply", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"#1", "+", 
          RowBox[{"#2", "*", "\[Beta]2"}]}], ",", "q"}], "]"}], "&"}], ",", 
      RowBox[{"Partition", "[", 
       RowBox[{"poly1", ",", "2", ",", "2", ",", "1", ",", "0"}], "]"}], ",", 
      "1"}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"-", "Round"}]}], " ", 
      RowBox[{"3", "--"}]}], "-"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]3", "=", 
     RowBox[{"RandomInteger", "[", "q", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k3", "=", 
     RowBox[{"k2", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]3", "=", 
     RowBox[{"PowerMod", "[", 
      RowBox[{"\[Omega]2", ",", "2", ",", "q"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"poly3", "=", 
    RowBox[{"Apply", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"#1", "+", 
          RowBox[{"#2", "*", "\[Beta]3"}]}], ",", "q"}], "]"}], "&"}], ",", 
      RowBox[{"Partition", "[", 
       RowBox[{"poly2", ",", "2", ",", "2", ",", "1", ",", "0"}], "]"}], ",", 
      "1"}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"-", "Round"}]}], " ", 
      RowBox[{"4", "--"}]}], "-"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]4", "=", 
     RowBox[{"RandomInteger", "[", "q", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k4", "=", 
     RowBox[{"k3", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]4", "=", 
     RowBox[{"PowerMod", "[", 
      RowBox[{"\[Omega]3", ",", "2", ",", "q"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"poly4", "=", 
    RowBox[{"Apply", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"#1", "+", 
          RowBox[{"#2", "*", "\[Beta]4"}]}], ",", "q"}], "]"}], "&"}], ",", 
      RowBox[{"Partition", "[", 
       RowBox[{"poly3", ",", "2", ",", "2", ",", "1", ",", "0"}], "]"}], ",", 
      "1"}], "]"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.953720564222842*^9, 3.953720618987945*^9}, {
   3.953720741671898*^9, 3.953720745097989*^9}, {3.953720776804611*^9, 
   3.953720822493362*^9}, {3.953720899785808*^9, 3.953720988402*^9}, {
   3.953721098635467*^9, 3.953721330323839*^9}, {3.9537214490214787`*^9, 
   3.953721453655151*^9}, {3.953721530198124*^9, 3.9537215950271893`*^9}, {
   3.9537219446418743`*^9, 3.953722074023337*^9}, {3.95372215366371*^9, 
   3.953722171588251*^9}, {3.953722227045013*^9, 3.953722241888122*^9}, {
   3.953722397342606*^9, 3.9537224183882837`*^9}, {3.953723233436431*^9, 
   3.953723242034102*^9}, {3.953723272133712*^9, 3.953723394456465*^9}, {
   3.953723436446864*^9, 3.9537234624584417`*^9}, {3.953723558534555*^9, 
   3.9537236054597597`*^9}, {3.9537238693168364`*^9, 3.953723876108494*^9}, {
   3.9537239233428097`*^9, 3.953723965082883*^9}, {3.953724009771387*^9, 
   3.953724016238443*^9}, {3.953724047597954*^9, 3.953724086742723*^9}, 
   3.953724396557547*^9, {3.9537244345002527`*^9, 3.95372443776361*^9}, {
   3.9537361935815477`*^9, 3.9537362307495947`*^9}, {3.953736262138329*^9, 
   3.95373626554949*^9}},
 CellLabel->
  "In[555]:=",ExpressionUUID->"35e6ed5d-f4e0-4e68-ad9c-bbf829cbafcf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "175896", ",", "493408", ",", "72366", ",", "126276", ",", "23679"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9537240661033697`*^9, 3.953724088326297*^9}, 
   3.953724438248933*^9, 3.953736173311985*^9, {3.953736206494841*^9, 
   3.9537362313503733`*^9}, 3.95373626722012*^9, 3.953808586090416*^9},
 CellLabel->
  "Out[573]=",ExpressionUUID->"23264079-76e9-447c-ade5-977a0ab7d234"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"73173", ",", "198139", ",", "23679"}], "}"}]], "Output",
 CellChangeTimes->{{3.9537240661033697`*^9, 3.953724088326297*^9}, 
   3.953724438248933*^9, 3.953736173311985*^9, {3.953736206494841*^9, 
   3.9537362313503733`*^9}, 3.95373626722012*^9, 3.953808586092861*^9},
 CellLabel->
  "Out[577]=",ExpressionUUID->"75730868-9bed-4058-9dd2-21115d62f90e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"170869", ",", "23679"}], "}"}]], "Output",
 CellChangeTimes->{{3.9537240661033697`*^9, 3.953724088326297*^9}, 
   3.953724438248933*^9, 3.953736173311985*^9, {3.953736206494841*^9, 
   3.9537362313503733`*^9}, 3.95373626722012*^9, 3.953808586095096*^9},
 CellLabel->
  "Out[581]=",ExpressionUUID->"07cdb032-8a3f-49a5-958d-588d4c7a7518"],

Cell[BoxData[
 RowBox[{"{", "564693", "}"}]], "Output",
 CellChangeTimes->{{3.9537240661033697`*^9, 3.953724088326297*^9}, 
   3.953724438248933*^9, 3.953736173311985*^9, {3.953736206494841*^9, 
   3.9537362313503733`*^9}, 3.95373626722012*^9, 3.953808586097056*^9},
 CellLabel->
  "Out[585]=",ExpressionUUID->"a5b80c5d-b364-467e-836a-e5dc86f10e9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MonomialTable", "[", 
   RowBox[{"poly0", ",", "\[Omega]0", ",", "k0"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Output of folding round 1 with \[Beta]=\>\"", "<>", 
   RowBox[{"ToString", "[", "\[Beta]1", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MonomialTable", "[", 
   RowBox[{"poly1", ",", "\[Omega]1", ",", "k1"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Output of folding round 2 with \[Beta]=\>\"", "<>", 
   RowBox[{"ToString", "[", "\[Beta]2", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MonomialTable", "[", 
   RowBox[{"poly2", ",", "\[Omega]2", ",", "k2"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Output of folding round 3 with \[Beta]=\>\"", "<>", 
   RowBox[{"ToString", "[", "\[Beta]3", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MonomialTable", "[", 
   RowBox[{"poly3", ",", "\[Omega]3", ",", "k3"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Output of folding round 4 with \[Beta]=\>\"", "<>", 
   RowBox[{"ToString", "[", "\[Beta]4", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MonomialTable", "[", 
  RowBox[{"poly4", ",", "\[Omega]4", ",", "k4"}], "]"}]}], "Input",
 CellChangeTimes->{{3.95372209523447*^9, 3.9537221249747562`*^9}, {
  3.9537234117925367`*^9, 3.9537234254783382`*^9}, {3.953724167795826*^9, 
  3.953724257489599*^9}, {3.953736234882965*^9, 3.953736236154244*^9}},
 CellLabel->
  "In[586]:=",ExpressionUUID->"310d8dd2-09d9-4da1-a202-4c0d7510d410"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"673805", "+", 
  RowBox[{"317744", " ", "X"}], "+", 
  RowBox[{"681867", " ", 
   SuperscriptBox["X", "2"]}], "+", 
  RowBox[{"379922", " ", 
   SuperscriptBox["X", "3"]}], "+", 
  RowBox[{"541784", " ", 
   SuperscriptBox["X", "4"]}], "+", 
  RowBox[{"130562", " ", 
   SuperscriptBox["X", "5"]}], "+", 
  RowBox[{"185550", " ", 
   SuperscriptBox["X", "6"]}], "+", 
  RowBox[{"417163", " ", 
   SuperscriptBox["X", "7"]}], "+", 
  RowBox[{"23679", " ", 
   SuperscriptBox["X", "8"]}]}]], "Print",
 CellChangeTimes->{{3.95372340760867*^9, 3.9537234257444057`*^9}, 
   3.953723579597877*^9, 3.9537236101090107`*^9, 3.953723880852296*^9, 
   3.9537239878455*^9, {3.9537240693272657`*^9, 3.953724090862072*^9}, {
   3.9537241973426733`*^9, 3.953724259088612*^9}, 3.953724441692672*^9, {
   3.95373621008585*^9, 3.953736237466292*^9}, 3.953736270968978*^9, 
   3.9538085883663177`*^9},
 CellLabel->
  "During evaluation of \
In[586]:=",ExpressionUUID->"33da2514-fe08-4637-b3af-115f687d0181"],

Cell[BoxData[
 TagBox[GridBox[{
    {"673805", "317744", "681867", "379922", "541784", "130562", "185550", 
     "417163", "23679", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "147137", "357430", "432663", "138294", "249346", "20550", 
     "252229", "542212", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "147492", "400608", "76408", "419436", "468621", "562379", 
     "595124", "762754", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "499938", "554244", "127388", "287313", "555655", "24139", 
     "454436", "244221", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "22289", "344750", "232885", "244649", "240490", "180050", 
     "701264", "23679", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "700007", "691570", "612357", "648139", "5720", "222112", 
     "226363", "542212", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "497387", "480984", "529313", "366997", "360079", "20149", 
     "16268", "762754", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "673034", "234631", "650810", "499120", "556834", "632268", 
     "190941", "244221", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "226771", "104566", "317376", "541784", "744085", "600883", 
     "619472", "23679", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "71263", "429003", "291415", "138294", "683921", "765883", 
     "351348", "542212", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "190653", "385825", "632127", "419436", "49426", "224054", 
     "194969", "762754", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "169712", "232189", "589199", "287313", "598399", "762294", 
     "80067", "244221", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "706103", "441683", "609768", "244649", "386079", "606383", 
     "386969", "23679", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "497319", "94863", "325280", "648139", "406209", "564321", 
     "233428", "542212", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "596662", "305449", "496034", "366997", "629874", "766284", 
     "709610", "762754", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "774617", "551802", "507758", "499120", "562924", "154165", 
     "438313", "244221", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "468689", "681867", "406511", "541784", "655871", "185550", 
     "369270", "23679", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "639296", "357430", "353770", "138294", "537087", "20550", 
     "534204", "542212", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "638941", "400608", "710025", "419436", "317812", "562379", 
     "191309", "762754", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "286495", "554244", "659045", "287313", "230778", "24139", 
     "331997", "244221", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "764144", "344750", "553548", "244649", "545943", "180050", 
     "85169", "23679", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "86426", "691570", "174076", "648139", "780713", "222112", 
     "560070", "542212", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "289046", "480984", "257120", "366997", "426354", "20149", 
     "770165", "762754", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "113399", "234631", "135623", "499120", "229599", "632268", 
     "595492", "244221", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "559662", "104566", "469057", "541784", "42348", "600883", 
     "166961", "23679", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "715170", "429003", "495018", "138294", "102512", "765883", 
     "435085", "542212", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "595780", "385825", "154306", "419436", "737007", "224054", 
     "591464", "762754", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "616721", "232189", "197234", "287313", "188034", "762294", 
     "706366", "244221", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "80330", "441683", "176665", "244649", "400354", "606383", 
     "399464", "23679", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "289114", "94863", "461153", "648139", "380224", "564321", 
     "553005", "542212", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "189771", "305449", "290399", "366997", "156559", "766284", 
     "76823", "762754", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"673805", "11816", "551802", "278675", "499120", "223509", "154165", 
     "348120", "244221", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{{3.95372340760867*^9, 3.9537234257444057`*^9}, 
   3.953723579597877*^9, 3.9537236101090107`*^9, 3.953723880852296*^9, 
   3.9537239878455*^9, {3.9537240693272657`*^9, 3.953724090862072*^9}, {
   3.9537241973426733`*^9, 3.953724259088612*^9}, 3.953724441692672*^9, {
   3.95373621008585*^9, 3.953736237466292*^9}, 3.953736270968978*^9, 
   3.953808588369873*^9},
 CellLabel->
  "During evaluation of \
In[586]:=",ExpressionUUID->"cd84b061-9dee-4110-86c6-4a6bce610f71"],

Cell[BoxData["\<\"\\n\"\>"], "Print",
 CellChangeTimes->{{3.95372340760867*^9, 3.9537234257444057`*^9}, 
   3.953723579597877*^9, 3.9537236101090107`*^9, 3.953723880852296*^9, 
   3.9537239878455*^9, {3.9537240693272657`*^9, 3.953724090862072*^9}, {
   3.9537241973426733`*^9, 3.953724259088612*^9}, 3.953724441692672*^9, {
   3.95373621008585*^9, 3.953736237466292*^9}, 3.953736270968978*^9, 
   3.953808588373906*^9},
 CellLabel->
  "During evaluation of \
In[586]:=",ExpressionUUID->"962ee95d-87d5-464f-aa91-fe39b6a4ccc2"],

Cell[BoxData["\<\"Output of folding round 1 with \[Beta]=388099\"\>"], "Print",
 CellChangeTimes->{{3.95372340760867*^9, 3.9537234257444057`*^9}, 
   3.953723579597877*^9, 3.9537236101090107`*^9, 3.953723880852296*^9, 
   3.9537239878455*^9, {3.9537240693272657`*^9, 3.953724090862072*^9}, {
   3.9537241973426733`*^9, 3.953724259088612*^9}, 3.953724441692672*^9, {
   3.95373621008585*^9, 3.953736237466292*^9}, 3.953736270968978*^9, 
   3.953808588375383*^9},
 CellLabel->
  "During evaluation of \
In[586]:=",ExpressionUUID->"4bb05881-2f29-489c-a492-fb725aaa6ef9"],

Cell[BoxData[
 RowBox[{"175896", "+", 
  RowBox[{"493408", " ", "X"}], "+", 
  RowBox[{"72366", " ", 
   SuperscriptBox["X", "2"]}], "+", 
  RowBox[{"126276", " ", 
   SuperscriptBox["X", "3"]}], "+", 
  RowBox[{"23679", " ", 
   SuperscriptBox["X", "4"]}]}]], "Print",
 CellChangeTimes->{{3.95372340760867*^9, 3.9537234257444057`*^9}, 
   3.953723579597877*^9, 3.9537236101090107`*^9, 3.953723880852296*^9, 
   3.9537239878455*^9, {3.9537240693272657`*^9, 3.953724090862072*^9}, {
   3.9537241973426733`*^9, 3.953724259088612*^9}, 3.953724441692672*^9, {
   3.95373621008585*^9, 3.953736237466292*^9}, 3.953736270968978*^9, 
   3.9538085883769073`*^9},
 CellLabel->
  "During evaluation of \
In[586]:=",ExpressionUUID->"29e765d5-caa9-4a41-a6a4-b251a24a6ed9"],

Cell[BoxData[
 TagBox[GridBox[{
    {"175896", "493408", "72366", "126276", "23679", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0"},
    {"175896", "248239", "78224", "643386", "542212", "0", "0", "0", "0", "0",
      "0", "0", "0", "0", "0", "0"},
    {"175896", "479012", "79818", "687", "762754", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0"},
    {"175896", "393505", "133683", "492153", "244221", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0"},
    {"175896", "532285", "714067", "143513", "23679", "0", "0", "0", "0", "0",
      "0", "0", "0", "0", "0", "0"},
    {"175896", "56866", "708209", "700606", "542212", "0", "0", "0", "0", "0",
      "0", "0", "0", "0", "0", "0"},
    {"175896", "531208", "706615", "488929", "762754", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0"},
    {"175896", "152408", "652750", "742676", "244221", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0"},
    {"175896", "293025", "72366", "660157", "23679", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0"},
    {"175896", "538194", "78224", "143047", "542212", "0", "0", "0", "0", "0",
      "0", "0", "0", "0", "0", "0"},
    {"175896", "307421", "79818", "785746", "762754", "0", "0", "0", "0", "0",
      "0", "0", "0", "0", "0", "0"},
    {"175896", "392928", "133683", "294280", "244221", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0"},
    {"175896", "254148", "714067", "642920", "23679", "0", "0", "0", "0", "0",
      "0", "0", "0", "0", "0", "0"},
    {"175896", "729567", "708209", "85827", "542212", "0", "0", "0", "0", "0",
      "0", "0", "0", "0", "0", "0"},
    {"175896", "255225", "706615", "297504", "762754", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0", "0"},
    {"175896", "634025", "652750", "43757", "244221", "0", "0", "0", "0", "0",
      "0", "0", "0", "0", "0", "0"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{{3.95372340760867*^9, 3.9537234257444057`*^9}, 
   3.953723579597877*^9, 3.9537236101090107`*^9, 3.953723880852296*^9, 
   3.9537239878455*^9, {3.9537240693272657`*^9, 3.953724090862072*^9}, {
   3.9537241973426733`*^9, 3.953724259088612*^9}, 3.953724441692672*^9, {
   3.95373621008585*^9, 3.953736237466292*^9}, 3.953736270968978*^9, 
   3.953808588378628*^9},
 CellLabel->
  "During evaluation of \
In[586]:=",ExpressionUUID->"1aa1dacc-8e76-44b7-840b-9811cbb3e79f"],

Cell[BoxData["\<\"\\n\"\>"], "Print",
 CellChangeTimes->{{3.95372340760867*^9, 3.9537234257444057`*^9}, 
   3.953723579597877*^9, 3.9537236101090107`*^9, 3.953723880852296*^9, 
   3.9537239878455*^9, {3.9537240693272657`*^9, 3.953724090862072*^9}, {
   3.9537241973426733`*^9, 3.953724259088612*^9}, 3.953724441692672*^9, {
   3.95373621008585*^9, 3.953736237466292*^9}, 3.953736270968978*^9, 
   3.95380858838033*^9},
 CellLabel->
  "During evaluation of \
In[586]:=",ExpressionUUID->"90a588bc-088c-4b27-b842-0d8a83c791e3"],

Cell[BoxData["\<\"Output of folding round 2 with \[Beta]=754815\"\>"], "Print",
 CellChangeTimes->{{3.95372340760867*^9, 3.9537234257444057`*^9}, 
   3.953723579597877*^9, 3.9537236101090107`*^9, 3.953723880852296*^9, 
   3.9537239878455*^9, {3.9537240693272657`*^9, 3.953724090862072*^9}, {
   3.9537241973426733`*^9, 3.953724259088612*^9}, 3.953724441692672*^9, {
   3.95373621008585*^9, 3.953736237466292*^9}, 3.953736270968978*^9, 
   3.953808588381699*^9},
 CellLabel->
  "During evaluation of \
In[586]:=",ExpressionUUID->"55f0ef0d-597c-4e80-ac5d-633c3cf85320"],

Cell[BoxData[
 RowBox[{"73173", "+", 
  RowBox[{"198139", " ", "X"}], "+", 
  RowBox[{"23679", " ", 
   SuperscriptBox["X", "2"]}]}]], "Print",
 CellChangeTimes->{{3.95372340760867*^9, 3.9537234257444057`*^9}, 
   3.953723579597877*^9, 3.9537236101090107`*^9, 3.953723880852296*^9, 
   3.9537239878455*^9, {3.9537240693272657`*^9, 3.953724090862072*^9}, {
   3.9537241973426733`*^9, 3.953724259088612*^9}, 3.953724441692672*^9, {
   3.95373621008585*^9, 3.953736237466292*^9}, 3.953736270968978*^9, 
   3.953808588383101*^9},
 CellLabel->
  "During evaluation of \
In[586]:=",ExpressionUUID->"7fc6d96c-a582-4c1d-953e-cb9ee88df7d8"],

Cell[BoxData[
 TagBox[GridBox[{
    {"73173", "198139", "23679", "0", "0", "0", "0", "0"},
    {"73173", "34583", "542212", "0", "0", "0", "0", "0"},
    {"73173", "741875", "762754", "0", "0", "0", "0", "0"},
    {"73173", "432241", "244221", "0", "0", "0", "0", "0"},
    {"73173", "588294", "23679", "0", "0", "0", "0", "0"},
    {"73173", "751850", "542212", "0", "0", "0", "0", "0"},
    {"73173", "44558", "762754", "0", "0", "0", "0", "0"},
    {"73173", "354192", "244221", "0", "0", "0", "0", "0"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{{3.95372340760867*^9, 3.9537234257444057`*^9}, 
   3.953723579597877*^9, 3.9537236101090107`*^9, 3.953723880852296*^9, 
   3.9537239878455*^9, {3.9537240693272657`*^9, 3.953724090862072*^9}, {
   3.9537241973426733`*^9, 3.953724259088612*^9}, 3.953724441692672*^9, {
   3.95373621008585*^9, 3.953736237466292*^9}, 3.953736270968978*^9, 
   3.953808588384494*^9},
 CellLabel->
  "During evaluation of \
In[586]:=",ExpressionUUID->"ccc16852-94c9-482b-b487-e5025d3ebc85"],

Cell[BoxData["\<\"\\n\"\>"], "Print",
 CellChangeTimes->{{3.95372340760867*^9, 3.9537234257444057`*^9}, 
   3.953723579597877*^9, 3.9537236101090107`*^9, 3.953723880852296*^9, 
   3.9537239878455*^9, {3.9537240693272657`*^9, 3.953724090862072*^9}, {
   3.9537241973426733`*^9, 3.953724259088612*^9}, 3.953724441692672*^9, {
   3.95373621008585*^9, 3.953736237466292*^9}, 3.953736270968978*^9, 
   3.953808588385868*^9},
 CellLabel->
  "During evaluation of \
In[586]:=",ExpressionUUID->"d9e8ada0-8a66-46db-8ad9-d14bc5c0ac41"],

Cell[BoxData["\<\"Output of folding round 3 with \[Beta]=365987\"\>"], "Print",
 CellChangeTimes->{{3.95372340760867*^9, 3.9537234257444057`*^9}, 
   3.953723579597877*^9, 3.9537236101090107`*^9, 3.953723880852296*^9, 
   3.9537239878455*^9, {3.9537240693272657`*^9, 3.953724090862072*^9}, {
   3.9537241973426733`*^9, 3.953724259088612*^9}, 3.953724441692672*^9, {
   3.95373621008585*^9, 3.953736237466292*^9}, 3.953736270968978*^9, 
   3.953808588387146*^9},
 CellLabel->
  "During evaluation of \
In[586]:=",ExpressionUUID->"2c82d8a5-283a-45e8-9a38-4beb81aeabcd"],

Cell[BoxData[
 RowBox[{"170869", "+", 
  RowBox[{"23679", " ", "X"}]}]], "Print",
 CellChangeTimes->{{3.95372340760867*^9, 3.9537234257444057`*^9}, 
   3.953723579597877*^9, 3.9537236101090107`*^9, 3.953723880852296*^9, 
   3.9537239878455*^9, {3.9537240693272657`*^9, 3.953724090862072*^9}, {
   3.9537241973426733`*^9, 3.953724259088612*^9}, 3.953724441692672*^9, {
   3.95373621008585*^9, 3.953736237466292*^9}, 3.953736270968978*^9, 
   3.953808588388484*^9},
 CellLabel->
  "During evaluation of \
In[586]:=",ExpressionUUID->"841a8df6-358b-49e9-b616-24c4c392a809"],

Cell[BoxData[
 TagBox[GridBox[{
    {"170869", "23679", "0", "0"},
    {"170869", "542212", "0", "0"},
    {"170869", "762754", "0", "0"},
    {"170869", "244221", "0", "0"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{{3.95372340760867*^9, 3.9537234257444057`*^9}, 
   3.953723579597877*^9, 3.9537236101090107`*^9, 3.953723880852296*^9, 
   3.9537239878455*^9, {3.9537240693272657`*^9, 3.953724090862072*^9}, {
   3.9537241973426733`*^9, 3.953724259088612*^9}, 3.953724441692672*^9, {
   3.95373621008585*^9, 3.953736237466292*^9}, 3.953736270968978*^9, 
   3.9538085883898087`*^9},
 CellLabel->
  "During evaluation of \
In[586]:=",ExpressionUUID->"53c89cea-c2ee-4a55-b8af-ee72a9c3e2da"],

Cell[BoxData["\<\"\\n\"\>"], "Print",
 CellChangeTimes->{{3.95372340760867*^9, 3.9537234257444057`*^9}, 
   3.953723579597877*^9, 3.9537236101090107`*^9, 3.953723880852296*^9, 
   3.9537239878455*^9, {3.9537240693272657`*^9, 3.953724090862072*^9}, {
   3.9537241973426733`*^9, 3.953724259088612*^9}, 3.953724441692672*^9, {
   3.95373621008585*^9, 3.953736237466292*^9}, 3.953736270968978*^9, 
   3.95380858839114*^9},
 CellLabel->
  "During evaluation of \
In[586]:=",ExpressionUUID->"4b72b531-9e00-415a-9ced-7218cc3e058e"],

Cell[BoxData["\<\"Output of folding round 4 with \[Beta]=218354\"\>"], "Print",
 CellChangeTimes->{{3.95372340760867*^9, 3.9537234257444057`*^9}, 
   3.953723579597877*^9, 3.9537236101090107`*^9, 3.953723880852296*^9, 
   3.9537239878455*^9, {3.9537240693272657`*^9, 3.953724090862072*^9}, {
   3.9537241973426733`*^9, 3.953724259088612*^9}, 3.953724441692672*^9, {
   3.95373621008585*^9, 3.953736237466292*^9}, 3.953736270968978*^9, 
   3.953808588392377*^9},
 CellLabel->
  "During evaluation of \
In[586]:=",ExpressionUUID->"127cc1f5-76a3-45b3-8beb-4f2fb14e5e07"],

Cell[BoxData["564693"], "Print",
 CellChangeTimes->{{3.95372340760867*^9, 3.9537234257444057`*^9}, 
   3.953723579597877*^9, 3.9537236101090107`*^9, 3.953723880852296*^9, 
   3.9537239878455*^9, {3.9537240693272657`*^9, 3.953724090862072*^9}, {
   3.9537241973426733`*^9, 3.953724259088612*^9}, 3.953724441692672*^9, {
   3.95373621008585*^9, 3.953736237466292*^9}, 3.953736270968978*^9, 
   3.9538085883935947`*^9},
 CellLabel->
  "During evaluation of \
In[586]:=",ExpressionUUID->"7c9c5f74-875a-4a17-8490-fafd19a61b30"],

Cell[BoxData[
 TagBox[GridBox[{
    {"564693", "0"},
    {"564693", "0"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{{3.95372340760867*^9, 3.9537234257444057`*^9}, 
   3.953723579597877*^9, 3.9537236101090107`*^9, 3.953723880852296*^9, 
   3.9537239878455*^9, {3.9537240693272657`*^9, 3.953724090862072*^9}, {
   3.9537241973426733`*^9, 3.953724259088612*^9}, 3.953724441692672*^9, {
   3.95373621008585*^9, 3.953736237466292*^9}, 3.953736270968978*^9, 
   3.953808588394807*^9},
 CellLabel->
  "During evaluation of \
In[586]:=",ExpressionUUID->"fe76ada5-8ede-4c20-9757-1386e633453d"],

Cell[BoxData["\<\"\\n\"\>"], "Print",
 CellChangeTimes->{{3.95372340760867*^9, 3.9537234257444057`*^9}, 
   3.953723579597877*^9, 3.9537236101090107`*^9, 3.953723880852296*^9, 
   3.9537239878455*^9, {3.9537240693272657`*^9, 3.953724090862072*^9}, {
   3.9537241973426733`*^9, 3.953724259088612*^9}, 3.953724441692672*^9, {
   3.95373621008585*^9, 3.953736237466292*^9}, 3.953736270968978*^9, 
   3.9538085883959713`*^9},
 CellLabel->
  "During evaluation of \
In[586]:=",ExpressionUUID->"6db0c944-f6b6-477b-836d-cf96dbb987d6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{
   RowBox[{"135138", "+", 
    RowBox[{"111500", "*", "5612"}]}], ",", "q"}], "]"}]], "Input",
 CellChangeTimes->{{3.9537241403313932`*^9, 3.953724145386911*^9}, {
  3.953724275518053*^9, 3.953724282216474*^9}, {3.9537243495152483`*^9, 
  3.953724350328141*^9}, {3.9537363058210783`*^9, 3.9537363178655567`*^9}},
 CellLabel->
  "In[382]:=",ExpressionUUID->"3fa88eec-171e-41f0-9227-8d7b71197bcd"],

Cell[BoxData["658903"], "Output",
 CellChangeTimes->{3.953724282791893*^9, 3.953724350714168*^9, 
  3.953736318810986*^9},
 CellLabel->
  "Out[382]=",ExpressionUUID->"a90ae46e-8346-46a8-8185-3d708dc40310"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FRI Symbolic", "Section",
 CellChangeTimes->{{3.953795122135441*^9, 
  3.953795128736017*^9}},ExpressionUUID->"4dd86a73-ab04-4233-91a1-\
fb2f5d5d99fe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SymbolMonomialTable", "[", 
     RowBox[{"poly_", ",", "k_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"poly2", ",", "table"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"poly2", "=", 
        RowBox[{"PadRight", "[", 
         RowBox[{"poly", ",", "k", ",", "0"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"table", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"poly2", "[", 
            RowBox[{"[", 
             RowBox[{"j", "+", "1"}], "]"}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{"\[Omega]", "^", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"i", "*", "j"}], ",", "k"}], "]"}]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{"k", "-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", 
            RowBox[{"k", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"Expand", "[", 
         RowBox[{
          RowBox[{"FromDigits", "[", 
           RowBox[{
            RowBox[{"Reverse", "[", "poly", "]"}], ",", "\[Omega]"}], "]"}], 
          ",", 
          RowBox[{"Modulus", "->", "q"}]}], "]"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"TableForm", "[", "table", "]"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", "\"\<\\n\>\"", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"SymbolMonomialTable", "[", 
  RowBox[{"poly1", ",", "k1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"SymbolMonomialTable", "[", 
  RowBox[{"poly2", ",", "k2"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.953795147345622*^9, 3.953795272856353*^9}, {
  3.953795306432456*^9, 3.953795318423608*^9}, {3.953795391261539*^9, 
  3.953795417311187*^9}, {3.953795599311469*^9, 3.95379560298731*^9}},
 CellLabel->
  "In[595]:=",ExpressionUUID->"0efd32a8-a4a6-498f-85a9-f23c987866b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"175896", "+", 
  RowBox[{"493408", " ", "\[Omega]"}], "+", 
  RowBox[{"72366", " ", 
   SuperscriptBox["\[Omega]", "2"]}], "+", 
  RowBox[{"126276", " ", 
   SuperscriptBox["\[Omega]", "3"]}], "+", 
  RowBox[{"23679", " ", 
   SuperscriptBox["\[Omega]", "4"]}]}]], "Print",
 CellChangeTimes->{{3.953795246890704*^9, 3.9537952740747967`*^9}, {
   3.95379530901515*^9, 3.9537953187904587`*^9}, {3.953795394151946*^9, 
   3.953795418346662*^9}, {3.953795601367094*^9, 3.953795603297504*^9}, 
   3.953808593897251*^9},
 CellLabel->
  "During evaluation of \
In[595]:=",ExpressionUUID->"394043ba-3870-48b4-a1b2-14e7cd1a2a9f"],

Cell[BoxData[
 TagBox[GridBox[{
    {"175896", "493408", "72366", "126276", "23679", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0"},
    {"175896", 
     RowBox[{"493408", " ", "\[Omega]"}], 
     RowBox[{"72366", " ", 
      SuperscriptBox["\[Omega]", "2"]}], 
     RowBox[{"126276", " ", 
      SuperscriptBox["\[Omega]", "3"]}], 
     RowBox[{"23679", " ", 
      SuperscriptBox["\[Omega]", "4"]}], "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0"},
    {"175896", 
     RowBox[{"493408", " ", 
      SuperscriptBox["\[Omega]", "2"]}], 
     RowBox[{"72366", " ", 
      SuperscriptBox["\[Omega]", "4"]}], 
     RowBox[{"126276", " ", 
      SuperscriptBox["\[Omega]", "6"]}], 
     RowBox[{"23679", " ", 
      SuperscriptBox["\[Omega]", "8"]}], "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0"},
    {"175896", 
     RowBox[{"493408", " ", 
      SuperscriptBox["\[Omega]", "3"]}], 
     RowBox[{"72366", " ", 
      SuperscriptBox["\[Omega]", "6"]}], 
     RowBox[{"126276", " ", 
      SuperscriptBox["\[Omega]", "9"]}], 
     RowBox[{"23679", " ", 
      SuperscriptBox["\[Omega]", "12"]}], "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0"},
    {"175896", 
     RowBox[{"493408", " ", 
      SuperscriptBox["\[Omega]", "4"]}], 
     RowBox[{"72366", " ", 
      SuperscriptBox["\[Omega]", "8"]}], 
     RowBox[{"126276", " ", 
      SuperscriptBox["\[Omega]", "12"]}], "23679", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0"},
    {"175896", 
     RowBox[{"493408", " ", 
      SuperscriptBox["\[Omega]", "5"]}], 
     RowBox[{"72366", " ", 
      SuperscriptBox["\[Omega]", "10"]}], 
     RowBox[{"126276", " ", 
      SuperscriptBox["\[Omega]", "15"]}], 
     RowBox[{"23679", " ", 
      SuperscriptBox["\[Omega]", "4"]}], "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0"},
    {"175896", 
     RowBox[{"493408", " ", 
      SuperscriptBox["\[Omega]", "6"]}], 
     RowBox[{"72366", " ", 
      SuperscriptBox["\[Omega]", "12"]}], 
     RowBox[{"126276", " ", 
      SuperscriptBox["\[Omega]", "2"]}], 
     RowBox[{"23679", " ", 
      SuperscriptBox["\[Omega]", "8"]}], "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0"},
    {"175896", 
     RowBox[{"493408", " ", 
      SuperscriptBox["\[Omega]", "7"]}], 
     RowBox[{"72366", " ", 
      SuperscriptBox["\[Omega]", "14"]}], 
     RowBox[{"126276", " ", 
      SuperscriptBox["\[Omega]", "5"]}], 
     RowBox[{"23679", " ", 
      SuperscriptBox["\[Omega]", "12"]}], "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0"},
    {"175896", 
     RowBox[{"493408", " ", 
      SuperscriptBox["\[Omega]", "8"]}], "72366", 
     RowBox[{"126276", " ", 
      SuperscriptBox["\[Omega]", "8"]}], "23679", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0"},
    {"175896", 
     RowBox[{"493408", " ", 
      SuperscriptBox["\[Omega]", "9"]}], 
     RowBox[{"72366", " ", 
      SuperscriptBox["\[Omega]", "2"]}], 
     RowBox[{"126276", " ", 
      SuperscriptBox["\[Omega]", "11"]}], 
     RowBox[{"23679", " ", 
      SuperscriptBox["\[Omega]", "4"]}], "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0"},
    {"175896", 
     RowBox[{"493408", " ", 
      SuperscriptBox["\[Omega]", "10"]}], 
     RowBox[{"72366", " ", 
      SuperscriptBox["\[Omega]", "4"]}], 
     RowBox[{"126276", " ", 
      SuperscriptBox["\[Omega]", "14"]}], 
     RowBox[{"23679", " ", 
      SuperscriptBox["\[Omega]", "8"]}], "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0"},
    {"175896", 
     RowBox[{"493408", " ", 
      SuperscriptBox["\[Omega]", "11"]}], 
     RowBox[{"72366", " ", 
      SuperscriptBox["\[Omega]", "6"]}], 
     RowBox[{"126276", " ", "\[Omega]"}], 
     RowBox[{"23679", " ", 
      SuperscriptBox["\[Omega]", "12"]}], "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0"},
    {"175896", 
     RowBox[{"493408", " ", 
      SuperscriptBox["\[Omega]", "12"]}], 
     RowBox[{"72366", " ", 
      SuperscriptBox["\[Omega]", "8"]}], 
     RowBox[{"126276", " ", 
      SuperscriptBox["\[Omega]", "4"]}], "23679", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0", "0", "0"},
    {"175896", 
     RowBox[{"493408", " ", 
      SuperscriptBox["\[Omega]", "13"]}], 
     RowBox[{"72366", " ", 
      SuperscriptBox["\[Omega]", "10"]}], 
     RowBox[{"126276", " ", 
      SuperscriptBox["\[Omega]", "7"]}], 
     RowBox[{"23679", " ", 
      SuperscriptBox["\[Omega]", "4"]}], "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0"},
    {"175896", 
     RowBox[{"493408", " ", 
      SuperscriptBox["\[Omega]", "14"]}], 
     RowBox[{"72366", " ", 
      SuperscriptBox["\[Omega]", "12"]}], 
     RowBox[{"126276", " ", 
      SuperscriptBox["\[Omega]", "10"]}], 
     RowBox[{"23679", " ", 
      SuperscriptBox["\[Omega]", "8"]}], "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0"},
    {"175896", 
     RowBox[{"493408", " ", 
      SuperscriptBox["\[Omega]", "15"]}], 
     RowBox[{"72366", " ", 
      SuperscriptBox["\[Omega]", "14"]}], 
     RowBox[{"126276", " ", 
      SuperscriptBox["\[Omega]", "13"]}], 
     RowBox[{"23679", " ", 
      SuperscriptBox["\[Omega]", "12"]}], "0", "0", "0", "0", "0", "0", "0", 
     "0", "0", "0", "0"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{{3.953795246890704*^9, 3.9537952740747967`*^9}, {
   3.95379530901515*^9, 3.9537953187904587`*^9}, {3.953795394151946*^9, 
   3.953795418346662*^9}, {3.953795601367094*^9, 3.953795603297504*^9}, 
   3.953808593900876*^9},
 CellLabel->
  "During evaluation of \
In[595]:=",ExpressionUUID->"3bf28c0f-66e3-4b19-9a63-a3b98e2424ea"],

Cell[BoxData["\<\"\\n\"\>"], "Print",
 CellChangeTimes->{{3.953795246890704*^9, 3.9537952740747967`*^9}, {
   3.95379530901515*^9, 3.9537953187904587`*^9}, {3.953795394151946*^9, 
   3.953795418346662*^9}, {3.953795601367094*^9, 3.953795603297504*^9}, 
   3.953808593904521*^9},
 CellLabel->
  "During evaluation of \
In[595]:=",ExpressionUUID->"626a6f44-f229-47a7-8727-1f405cd8658c"],

Cell[BoxData[
 RowBox[{"73173", "+", 
  RowBox[{"198139", " ", "\[Omega]"}], "+", 
  RowBox[{"23679", " ", 
   SuperscriptBox["\[Omega]", "2"]}]}]], "Print",
 CellChangeTimes->{{3.953795246890704*^9, 3.9537952740747967`*^9}, {
   3.95379530901515*^9, 3.9537953187904587`*^9}, {3.953795394151946*^9, 
   3.953795418346662*^9}, {3.953795601367094*^9, 3.953795603297504*^9}, 
   3.953808593906245*^9},
 CellLabel->
  "During evaluation of \
In[595]:=",ExpressionUUID->"b91c039b-9a2a-4dbf-9f17-a565c1baf72e"],

Cell[BoxData[
 TagBox[GridBox[{
    {"73173", "198139", "23679", "0", "0", "0", "0", "0"},
    {"73173", 
     RowBox[{"198139", " ", "\[Omega]"}], 
     RowBox[{"23679", " ", 
      SuperscriptBox["\[Omega]", "2"]}], "0", "0", "0", "0", "0"},
    {"73173", 
     RowBox[{"198139", " ", 
      SuperscriptBox["\[Omega]", "2"]}], 
     RowBox[{"23679", " ", 
      SuperscriptBox["\[Omega]", "4"]}], "0", "0", "0", "0", "0"},
    {"73173", 
     RowBox[{"198139", " ", 
      SuperscriptBox["\[Omega]", "3"]}], 
     RowBox[{"23679", " ", 
      SuperscriptBox["\[Omega]", "6"]}], "0", "0", "0", "0", "0"},
    {"73173", 
     RowBox[{"198139", " ", 
      SuperscriptBox["\[Omega]", "4"]}], "23679", "0", "0", "0", "0", "0"},
    {"73173", 
     RowBox[{"198139", " ", 
      SuperscriptBox["\[Omega]", "5"]}], 
     RowBox[{"23679", " ", 
      SuperscriptBox["\[Omega]", "2"]}], "0", "0", "0", "0", "0"},
    {"73173", 
     RowBox[{"198139", " ", 
      SuperscriptBox["\[Omega]", "6"]}], 
     RowBox[{"23679", " ", 
      SuperscriptBox["\[Omega]", "4"]}], "0", "0", "0", "0", "0"},
    {"73173", 
     RowBox[{"198139", " ", 
      SuperscriptBox["\[Omega]", "7"]}], 
     RowBox[{"23679", " ", 
      SuperscriptBox["\[Omega]", "6"]}], "0", "0", "0", "0", "0"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{{3.953795246890704*^9, 3.9537952740747967`*^9}, {
   3.95379530901515*^9, 3.9537953187904587`*^9}, {3.953795394151946*^9, 
   3.953795418346662*^9}, {3.953795601367094*^9, 3.953795603297504*^9}, 
   3.9538085939080477`*^9},
 CellLabel->
  "During evaluation of \
In[595]:=",ExpressionUUID->"11ebada2-c490-4bb3-a888-10fc521ebee4"],

Cell[BoxData["\<\"\\n\"\>"], "Print",
 CellChangeTimes->{{3.953795246890704*^9, 3.9537952740747967`*^9}, {
   3.95379530901515*^9, 3.9537953187904587`*^9}, {3.953795394151946*^9, 
   3.953795418346662*^9}, {3.953795601367094*^9, 3.953795603297504*^9}, 
   3.953808593909854*^9},
 CellLabel->
  "During evaluation of \
In[595]:=",ExpressionUUID->"55742d0f-c7d7-4233-bf7f-295833d53c8f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{
   RowBox[{"514486", "+", 
    RowBox[{"172077", " ", "*", 
     RowBox[{"(", "\[Beta]2", ")"}]}]}], ",", "q"}], "]"}]], "Input",
 CellChangeTimes->{{3.953795528756316*^9, 3.9537955785058804`*^9}, {
  3.953795614980728*^9, 3.953795620954145*^9}, {3.953808512317162*^9, 
  3.953808519661581*^9}, {3.953808557648498*^9, 3.9538085607305593`*^9}},
 CellLabel->
  "In[554]:=",ExpressionUUID->"3b90d8f5-8ac8-4c64-80ed-23603df41587"],

Cell[BoxData["175647"], "Output",
 CellChangeTimes->{{3.9537955354250803`*^9, 3.95379557889192*^9}, {
   3.953795616504897*^9, 3.953795621254148*^9}, 3.9538085215370417`*^9, 
   3.953808561162695*^9},
 CellLabel->
  "Out[554]=",ExpressionUUID->"46cf855b-410c-4a7e-bc8d-0c683d4f430b"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{267, Automatic}, {7, Automatic}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{
             LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.1 for Mac OS X ARM (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5a2cf40d-6004-448b-8e69-90147b0f6dab"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 160, 3, 67, "Section",ExpressionUUID->"07d10a75-2318-4e42-9150-16fc0a87e36f"],
Cell[743, 27, 3154, 79, 199, "Input",ExpressionUUID->"65df7fc0-05d3-4640-9337-5ce35f540d26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3934, 111, 150, 3, 67, "Section",ExpressionUUID->"a4bd33d3-feaf-4214-b0c0-00e11905c3e6"],
Cell[CellGroupData[{
Cell[4109, 118, 10015, 275, 1123, "Input",ExpressionUUID->"35e6ed5d-f4e0-4e68-ad9c-bbf829cbafcf"],
Cell[14127, 395, 426, 9, 34, "Output",ExpressionUUID->"23264079-76e9-447c-ade5-977a0ab7d234"],
Cell[14556, 406, 390, 7, 34, "Output",ExpressionUUID->"75730868-9bed-4058-9dd2-21115d62f90e"],
Cell[14949, 415, 376, 7, 34, "Output",ExpressionUUID->"07cdb032-8a3f-49a5-958d-588d4c7a7518"],
Cell[15328, 424, 349, 6, 34, "Output",ExpressionUUID->"a5b80c5d-b364-467e-836a-e5dc86f10e9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15714, 435, 1712, 35, 283, "Input",ExpressionUUID->"310d8dd2-09d9-4da1-a202-4c0d7510d410"],
Cell[CellGroupData[{
Cell[17451, 474, 1012, 25, 25, "Print",ExpressionUUID->"33da2514-fe08-4637-b3af-115f687d0181"],
Cell[18466, 501, 7994, 117, 550, "Print",ExpressionUUID->"cd84b061-9dee-4110-86c6-4a6bce610f71"],
Cell[26463, 620, 525, 9, 44, "Print",ExpressionUUID->"962ee95d-87d5-464f-aa91-fe39b6a4ccc2"],
Cell[26991, 631, 567, 9, 24, "Print",ExpressionUUID->"4bb05881-2f29-489c-a492-fb725aaa6ef9"],
Cell[27561, 642, 759, 17, 25, "Print",ExpressionUUID->"29e765d5-caa9-4a41-a6a4-b251a24a6ed9"],
Cell[28323, 661, 2744, 53, 278, "Print",ExpressionUUID->"1aa1dacc-8e76-44b7-840b-9811cbb3e79f"],
Cell[31070, 716, 524, 9, 44, "Print",ExpressionUUID->"90a588bc-088c-4b27-b842-0d8a83c791e3"],
Cell[31597, 727, 567, 9, 24, "Print",ExpressionUUID->"55f0ef0d-597c-4e80-ac5d-633c3cf85320"],
Cell[32167, 738, 631, 13, 25, "Print",ExpressionUUID->"7fc6d96c-a582-4c1d-953e-cb9ee88df7d8"],
Cell[32801, 753, 1364, 29, 142, "Print",ExpressionUUID->"ccc16852-94c9-482b-b487-e5025d3ebc85"],
Cell[34168, 784, 525, 9, 44, "Print",ExpressionUUID->"d9e8ada0-8a66-46db-8ad9-d14bc5c0ac41"],
Cell[34696, 795, 567, 9, 24, "Print",ExpressionUUID->"2c82d8a5-283a-45e8-9a38-4beb81aeabcd"],
Cell[35266, 806, 569, 11, 24, "Print",ExpressionUUID->"841a8df6-358b-49e9-b616-24c4c392a809"],
Cell[35838, 819, 1033, 25, 74, "Print",ExpressionUUID->"53c89cea-c2ee-4a55-b8af-ee72a9c3e2da"],
Cell[36874, 846, 524, 9, 44, "Print",ExpressionUUID->"4b72b531-9e00-415a-9ced-7218cc3e058e"],
Cell[37401, 857, 567, 9, 24, "Print",ExpressionUUID->"127cc1f5-76a3-45b3-8beb-4f2fb14e5e07"],
Cell[37971, 868, 522, 9, 24, "Print",ExpressionUUID->"7c9c5f74-875a-4a17-8490-fafd19a61b30"],
Cell[38496, 879, 930, 23, 40, "Print",ExpressionUUID->"fe76ada5-8ede-4c20-9757-1386e633453d"],
Cell[39429, 904, 527, 9, 44, "Print",ExpressionUUID->"6db0c944-f6b6-477b-836d-cf96dbb987d6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40005, 919, 442, 9, 30, "Input",ExpressionUUID->"3fa88eec-171e-41f0-9227-8d7b71197bcd"],
Cell[40450, 930, 205, 4, 34, "Output",ExpressionUUID->"a90ae46e-8346-46a8-8185-3d708dc40310"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40704, 940, 157, 3, 67, "Section",ExpressionUUID->"4dd86a73-ab04-4233-91a1-fb2f5d5d99fe"],
Cell[CellGroupData[{
Cell[40886, 947, 2245, 57, 241, "Input",ExpressionUUID->"0efd32a8-a4a6-498f-85a9-f23c987866b3"],
Cell[CellGroupData[{
Cell[43156, 1008, 644, 15, 25, "Print",ExpressionUUID->"394043ba-3870-48b4-a1b2-14e7cd1a2a9f"],
Cell[43803, 1025, 5969, 161, 308, "Print",ExpressionUUID->"3bf28c0f-66e3-4b19-9a63-a3b98e2424ea"],
Cell[49775, 1188, 384, 7, 44, "Print",ExpressionUUID->"626a6f44-f229-47a7-8727-1f405cd8658c"],
Cell[50162, 1197, 504, 11, 25, "Print",ExpressionUUID->"b91c039b-9a2a-4dbf-9f17-a565c1baf72e"],
Cell[50669, 1210, 1986, 52, 156, "Print",ExpressionUUID->"11ebada2-c490-4bb3-a888-10fc521ebee4"],
Cell[52658, 1264, 384, 7, 44, "Print",ExpressionUUID->"55742d0f-c7d7-4233-bf7f-295833d53c8f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53091, 1277, 473, 10, 30, "Input",ExpressionUUID->"3b90d8f5-8ac8-4c64-80ed-23603df41587"],
Cell[53567, 1289, 283, 5, 34, "Output",ExpressionUUID->"46cf855b-410c-4a7e-bc8d-0c683d4f430b"]
}, Open  ]]
}, Open  ]]
}
]
*)

